

#include <Servo.h>

Servo myservo0;
Servo myservo1;
Servo myservo2;
Servo myservo3;

int pos = 0;    // variable to store the servo position



/*****************************************************************************/

/***RF12 lib's   ****/

/*****************************************************************************/
#include <JeeLib.h>

char inputString[] = {
  '#','*', B00001111,B00001111,B00001111,B00001111,B00001111,B00001111,B00001111,B00001111
    , B11110000,B00001111,B11110000,B00001111,B00001111,B00001111,B00001111,B00001111,B00001111,B00001111
} 
;         // a string to hold incoming data
boolean stringComplete = false;  // whether the string is complete

char buf7[] = {
  '#','*', B00001111,B00001111,B00001111,B00001111,B00001111,B00001111,B00001111,B00001111, 
  B00001111,B00001111,B00001111,B00001111,B00001111,B00001111,B00001111,B00001111,B00001111,B00001111,B00001111,B00001111} 
; 
unsigned char bufferLength = 20;

int upperLimit1 = 170;
int lowerLimit1 = 70;

int upperLimit2 = 90;
int lowerLimit2 = 0;

void setup()
{
  Serial.begin(9600);
  Serial.println("friend start1");

  myservo0.attach(6);   
  delay(10);  
  myservo0.write(70); 
  delay(10); //right up
  myservo1.attach(9);   
  delay(10);  
  myservo1.write(170); 
  delay(10); //right up
  delay(100);
  myservo2.attach(3);   
  delay(10);  
  myservo3.attach(5);   
  delay(10);  

  myservo1.write(upperLimit2); 
  delay(100); 
  myservo0.write(180 - upperLimit2);  
  delay(100);


  myservo2.write(lowerLimit1);
  delay(250);
  myservo3.write(180 - lowerLimit1); 
  delay(250);



  rf12_initialize('R', RF12_868MHZ, 212);

  Serial.println("strange attractor");


}

void loop()
{

  if ( Serial.available()){
    char inbyte = Serial.read();
    //Serial.println("vibrate from serial");

    /*
    for (pos = 0; pos <= 180; pos += 5) // goes from 0 degrees to upperLimit degrees
     {
     myservo2.write(pos);              // tell servo to go to position in variable 'pos'
     delay(10);  
     } 
     
     Serial.println("vibrate from serial");
     */

    if ( inbyte == '1') excitement1();

    if ( inbyte == '2') { //all down
      servoLoop1();
      delay(100);
      servoLoop2();
    }

    if ( inbyte == '3') servoLoop2();//hands down

    if ( inbyte == '4')  //spirals up
    {
      myservo1.write(upperLimit1);
      delay(250);
      myservo0.write(180 - upperLimit1); 
      delay(250);

      for (pos = upperLimit1; pos >= lowerLimit1; pos -= 1) // goes from upperLimit degrees to 0 degrees
      {
        doServoPos1(pos);
      }
    }

    if ( inbyte == '5')  //hands up
    {
      for (pos = lowerLimit2; pos <= upperLimit2; pos += 1) // goes from 0 degrees to upperLimit degrees
      { // in steps of 1 degree
        doServoPos2(pos);
      }
    }
  }


  char* buf = (char*) rf12_data;

  if (rf12_recvDone() && rf12_crc == 0) {

    Serial.println("friend sees data");
    int check = 0;
    int counter = 0;
    int i = 0;
    while ( i < 30 )
    {
      if ( buf[i] == 's' ) {
        if ( buf[i+1] == 't') { 
          if ( buf[i+2] == '1') { //wiggle spirals
            excitement1();
          }
          if ( buf[i+2] == '2') { //all down
            servoLoop1();
            delay(100);
            servoLoop2();
          }
          if ( buf[i+2] == '3') { 
            servoLoop2();//hands down
          }
          if ( buf[i+2] == '4') { //spirals up
            myservo1.write(upperLimit1);
            delay(250);
            myservo0.write(180 - upperLimit1); 
            delay(250);

            for (pos = upperLimit1; pos >= lowerLimit1; pos -= 1) // goes from upperLimit degrees to 0 degrees
            {
              doServoPos1(pos);
            }
          }
          if ( buf[i+2] == '5') { //hands up
            {
              for (pos = lowerLimit2; pos <= upperLimit2; pos += 1) // goes from 0 degrees to upperLimit degrees
              { // in steps of 1 degree
                doServoPos2(pos);
              }
            }
          }

        }
      }
      i++;
    }
  }
  

}

void servoLoop1(){

  myservo1.write(lowerLimit1);
  delay(250);
  myservo0.write(180 - lowerLimit1); 
  delay(250);

  for (pos = lowerLimit1; pos <= upperLimit1; pos += 1) // goes from 0 degrees to upperLimit degrees
  { // in steps of 1 degree
    doServoPos1(pos);
  }
  /*
  for (pos = upperLimit1; pos >= lowerLimit1; pos -= 1) // goes from upperLimit degrees to 0 degrees
   {
   doServoPos1(pos);
   }
   */
}
void doServoPos1(int pos){
  myservo1.write(pos);              // tell servo to go to position in variable 'pos'
  delay(15);                       // waits 15ms for the servo to reach the position
  myservo0.write(180 - pos);              // tell servo to go to position in variable 'pos'
  delay(15);

}

void servoLoop2(){

  /*
  for (pos = lowerLimit2; pos <= upperLimit2; pos += 1) // goes from 0 degrees to upperLimit degrees
   { // in steps of 1 degree
   doServoPos2(pos);
   }
   */

  for (pos = upperLimit2; pos >= lowerLimit2; pos -= 1) // goes from upperLimit degrees to 0 degrees
  {
    doServoPos2(pos);
  }
}
void doServoPos2(int pos){
  myservo2.write(pos);              // tell servo to go to position in variable 'pos'
  delay(15);                       // waits 15ms for the servo to reach the position
  myservo3.write(180 - pos);              // tell servo to go to position in variable 'pos'
  delay(15);

}

void excitement1() {


  /*
  int upperLimit1 = 170;
   int lowerLimit1 = 70;
   
   int upperLimit2 = 90;
   int lowerLimit2 = -10;
   */
  /*
  myservo1.write(upperLimit2); 
   delay(100); 
   myservo0.write(180 - upperLimit2);  
   delay(100);
   */
  for (pos = 90; pos <= 110; pos += 1) // goes from upperLimit degrees to 0 degrees
  {
    myservo1.write(pos); 
    delay(15); 
  }
  for (pos = 90; pos <= 110; pos += 1) // goes from upperLimit degrees to 0 degrees
  {
    myservo0.write(pos);  
    delay(15);  
  }

  myservo1.write(70 + 40);//110
  delay(250);
  myservo0.write(180 - 170 + 60 + 40);//110
  delay(250);

  for ( int k = 0; k<5;k++){
    for (pos = 70; pos <= 110; pos += 1) // goes from upperLimit degrees to 0 degrees
    {
      myservo0.write(pos);  
      delay(15);   
      myservo1.write(pos);   
      delay(15);  
    }
    for (pos = 110; pos >= 70; pos -= 1) // goes from upperLimit degrees to 0 degrees
    {
      myservo0.write(pos);   
      delay(15);  
      myservo1.write(pos);   
      delay(15);  
    }
  }
}

void excitement2() {

  //excitement1
  // myservo0.write(180 - 170 + 60);//70
  //delay(250);
  //myservo1.write(70 + 0);//70
  //delay(250);

  myservo1.write(70 + 40);//110
  delay(250);
  myservo0.write(180 - 170 + 60 + 40);//110
  delay(250);

  for ( int k = 0; k<5;k++){
    for (pos = 70; pos <= 110; pos += 1) // goes from upperLimit degrees to 0 degrees
    {
      myservo2.write(pos);  
      delay(15);   
      myservo3.write(pos);   
      delay(15);  
    }
    for (pos = 110; pos >= 70; pos -= 1) // goes from upperLimit degrees to 0 degrees
    {
      myservo2.write(pos);   
      delay(15);  
      myservo3.write(pos);   
      delay(15);  
    }
  }


}


void excitement3() {
  int stepPos = 1;
  int nDelay = 20;



}








//Processing code to graph Attention values
//Comment out all of the lines after “if(brainwave && attention > 0 && attention < 100) {“
//Except for   
//mySerial.print(attention, DEC);
// mySerial.println();
//This will print out ONLY an Attention value and a new line afterwards
 

import processing.serial.*; 
Serial myPort;        // The serial port
int xPos = 1;         // horizontal position of the graph 
void setup () {
  // set the window size:
  size(400, 300);   
  String portName = Serial.list()[1];         //[1]  println(Serial.list()) to find the ports 
  //myPort = new Serial(this, "COM16", 4800);  // make sure the Baud rate matches the Arduino code
  
  
    println(Serial.list()); 

  // I know that the first port in the serial list on my mac 
  // is always my  Keyspan adaptor, so I open Serial.list()[0]. 
  // Open whatever port is the one you're using. 

  myPort = new Serial(this, Serial.list()[4], 4800); 
  
  myPort.bufferUntil('\n');                  // Wait for newline character:
  background(0);                             // set inital background color: 0 = black, 255 = white
}

void draw () {                              // everything happens in the serialEvent()
}

void serialEvent (Serial myPort) {
  String inString = myPort.readStringUntil('\n');

  if (inString != null) {                  // trim whitespace:
    inString = trim(inString);               // convert to an int and map to the screen height:
    // increment the horizontal position:
   // println( inString );
    String[] pieces = split(inString, ',');
println ( pieces[28] + " " + pieces[29] + " " + pieces[30] + " " + pieces[31]);

//2,0,131,24,0,22,73,0,41,100,0,29,173,0,38,215,0,17,106,0,65,172,0,41,108,0,42,25,4,84,5,83,

background(0);

fill(0);
rect(100, 220, 20, -100,5 );
rect(150, 220, 20, -100,5 );
stroke(255);
fill(255,0,255);
rect(100, 220, 20, - int( pieces[29]),5 );
text("attention", 70, 250);
fill(255,255,0);
rect(150, 220, 20, - int( pieces[31]),5 );
text("meditation", 140, 250);



  }
}

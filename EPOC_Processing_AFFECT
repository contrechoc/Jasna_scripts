//Needed an EPOC 
//OSC values => EPOC Control Center and MIND YOUR OSC

/**
 * ProcessingEpocOsc1
 * by Joshua Madara, hyperRitual.com
 * demonstrates Processing + Emotiv EPOC via OSC
 * uses EPOC's Cognitiv Left and Right to move a circle
 * left or right
 
 The various Address Patterns are: 
 /COG/NEUTRAL; 
 /COG/PUSH; 
 /COG/PULL; 
 /COG/LIFT; 
 /COG/DROP; 
 /COG/LEFT; 
 /COG/RIGHT; 
 /COG/ROTATE_LEFT; 
 /COG/ROTATE_RIGHT; 
 /COG/ROTATE_CLOCKWISE; 
 /COG/ROTATE_COUNTER_CLOCKWISE; 
 /COG/ROTATE_FORWARD; 
 /COG/ROTATE_REVERSE; 
 /COG/DISAPPEAR; 
 /AFF/Engaged/Bored; 
 /AFF/Excitement; 
 /AFF/Excitement Long Term; 
 /AFF/Meditation; 
 /AFF/Frustration; 
 /EXP/WINK_LEFT; 
 /EXP/WINK_RIGHT; 
 /EXP/BLINK; 
 /EXP/LEFT_LID; 
 /EXP/RIGHT_LID; 
 /EXP/HORIEYE; 
 /EXP/VERTEYE; 
 /EXP/SMILE; 
 /EXP/CLENCH; 
 /EXP/LAUGH; 
 /EXP/SMIRK_LEFT; 
 /EXP/SMIRK_RIGHT; 
 /EXP/FURROW; 
 /EXP/EYEBROW.
 
 
 */
 
import oscP5.*;
import netP5.*;

public float eng = 0;
public float exc = 0;
int circleX = 240;

OscP5 oscP5;

void setup() {
  size(480, 360);
  frameRate(30);
  smooth();
  
  //start oscP5, listening for incoming messages on port 7400
  //make sure this matches the port in Mind Your OSCs
  oscP5 = new OscP5(this, 7400);
}

void draw() {
  background(0);
  
  // draw graph ticks
  int i;
  for (i = 1; i <= 11; i++) {
    stroke(map(i, 1, 11, 0, 255));
    float tickX = map(i, 1, 11, 60, 420);
    line(tickX, 250, tickX, 269);
    line(tickX, 310, tickX, 329);
  }
  noStroke();
  
  // draw bar graph
  drawBarGraph(exc, 270);
  drawBarGraph(eng, 290);
  
  // determine whether to move circle left or right
  if((exc >= 0.5) && (circleX >= 0)) {
    circleX -= 5;
  } else if ((exc >= 0.5) && (circleX <= 480)) {
    circleX += 5;
  }
  
  // draw circle
  fill(color(25, 249, 255));
  ellipse(circleX, 150, 90, 90);
}

void drawBarGraph(float cogVal, int barY) {
  if(eng >= 0.5) {
    fill(color(22, 255, 113));
  } else {
    fill(color(255, 0, 0));
  }
  float len = map(eng, 0.0, 1.0, 0, 360);
  rect(61, barY, len, 20);
}

void oscEvent(OscMessage theOscMessage) {
  // check if theOscMessage has an address pattern we are looking for
  if(theOscMessage.checkAddrPattern("/AFF/Excitement") == true) {
     exc = theOscMessage.get(0).floatValue();
    println( "Excitement:   " + theOscMessage.get(0).floatValue());
  } else if (theOscMessage.checkAddrPattern("/AFF/Engaged/Bored") == true) {
    eng = theOscMessage.get(0).floatValue();
    println( "Engaged/Bored: ", theOscMessage.get(0).floatValue());
  }
}
